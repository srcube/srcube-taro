---
to: '{{ name }}/src/use.ts'
---

import type { ReactRef } from '@srcube-taro/utils-react'
import type { NativeProps } from '@srcube-taro/utils-taro'
import type { ViewProps } from '@tarojs/components'
import { useDOMRef } from '@srcube-taro/utils-react'
import { useCallback } from 'react'

interface Props {
  /**
   * Ref to the DOM element
   */
  ref?: ReactRef
}

export type Use{{ name | capitalize }}Props = Props &
  Omit<NativeProps<ViewProps>, ''>

export function use{{ name | capitalize }}(props: Use{{ name | capitalize }}Props) {
  const { ref, children, className, ...rest } = props

  const domRef = useDOMRef(ref)

  const get{{ name | capitalize }}Props = useCallback(() => {
    return {
      ...rest
    }
  }, [rest])

  return {
    Component,
    domRef,
    children,
    get{{ name | capitalize }}Props,
  }
}

export type Use{{ name | capitalize }}Return = ReturnType<typeof use{{ name | capitalize }}>
